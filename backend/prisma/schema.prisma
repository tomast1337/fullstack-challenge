// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id        Int       @id @default(autoincrement())
    name      String
    email     String    @unique
    picture   String
    products  Product[] // Products created by this user
    orders    Order[] // Orders placed by this user
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
}

model Product {
    id            Int         @id @default(autoincrement())
    name          String
    category      String
    description   String
    price         Float
    stockQuantity Int
    userId        Int // Owner of the product
    user          User        @relation(fields: [userId], references: [id])
    orderItems    OrderItem[]
    createdAt     DateTime    @default(now())
    updatedAt     DateTime    @updatedAt
}

model Order {
    id         Int         @id @default(autoincrement())
    userId     Int // User who placed the order
    user       User        @relation(fields: [userId], references: [id])
    orderItems OrderItem[]
    orderTotal Float       @default(0.0)
    status     OrderStatus @default(PENDING)
    createdAt  DateTime    @default(now())
    updatedAt  DateTime    @updatedAt
}

model OrderItem {
    id         Int   @id @default(autoincrement())
    orderId    Int
    productId  Int
    quantity   Int
    totalPrice Float @default(0.0)

    product Product @relation(fields: [productId], references: [id])
    order   Order   @relation(fields: [orderId], references: [id])
}

enum OrderStatus {
    PENDING
    COMPLETED
    CANCELED
}
